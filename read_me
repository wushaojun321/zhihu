数据库：
	User(->question;->answer;->comment)
	Role(->User)
	question(->answer)
	answer(->comment)
	attention(user <->question)
	like(user<->answer)





>>> from app import db
>>> from app import models as m
>>> q = m.Question.query.all()[0]
>>> type(q)
<class 'app.models.Question'>
>>> for i in q:
...     print i
...
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'Question' object is not iterable
>>> q.title
u'\u5403\u4ec0\u4e48\uff1f'
>>> q.user.username
u'wushaojun321'
>>> m.Answer.query.filter(Answer.questions.id=q.id)
  File "<console>", line 1
SyntaxError: keyword can't be an expression
>>> q.id
1
>>> m.Answer.query.filter(Answer.questions.id=int(q.id))
  File "<console>", line 1
SyntaxError: keyword can't be an expression
>>> m.Answer.query.filter(Answer.questions_id=q.id)
  File "<console>", line 1
SyntaxError: keyword can't be an expression
>>> m.Answer
<class 'app.models.Answer'>
>>> a = m.Answer.query.all()[0]
>>> a.content
u'\u5c0f\u9f99\u867e'
>>> m.Answer.query.filter(m.Answer.question_id=1)
  File "<console>", line 1
SyntaxError: keyword can't be an expression
>>> m.Answer.query.filter(question_id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: filter() got an unexpected keyword argument 'question_id'
>>> m.Answer.query.filter(questions_id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: filter() got an unexpected keyword argument 'questions_id'
>>> m.Answer.query.filter_by(questions_id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "D:\python27\lib\site-packages\sqlalchemy\orm\query.py", line 1514, in filter_by
    for key, value in kwargs.items()]
  File "D:\python27\lib\site-packages\sqlalchemy\orm\base.py", line 383, in _entity_descriptor
    (description, key)
InvalidRequestError: Entity '<class 'app.models.Answer'>' has no property 'questions_id'
>>> m.Answer.query.filter_by(questions_id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "D:\python27\lib\site-packages\sqlalchemy\orm\query.py", line 1514, in filter_by
    for key, value in kwargs.items()]
  File "D:\python27\lib\site-packages\sqlalchemy\orm\base.py", line 383, in _entity_descriptor
    (description, key)
InvalidRequestError: Entity '<class 'app.models.Answer'>' has no property 'questions_id'
>>> a = m.Answer.query.filter_by(question_id=1)
>>> a.user_id
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'BaseQuery' object has no attribute 'user_id'
>>> a = a[0]
>>> a.username
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Answer' object has no attribute 'username'
>>> a.user.username
u'wangqiyun'